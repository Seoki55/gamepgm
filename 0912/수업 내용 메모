커서 위치 제어(1)
#include<stdio.h>
#include<windows.h>
void gotoxy(int x, int y);
int main(void)
{
gotoxy(2,4);
printf("Hello");
gotoxy(40, 20);
printf("Hello");
return 0;
	
}

void gotoxy(int x, int y)
{
COORD Pos = {x - 1, y - 1};
SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);
}

커서 위치 제어(2)
#include<stdio.h>
#include<windows.h>
void gotoxy(int x, int y);
int main(void)
{
for(int i=1;i<=9;i++)
{
gotoxy(35, 5+i);
printf("%d*%d=%2d",3,i,3*i);
}

printf("\n");
return 0;
}

void gotoxy(int x, int y)
{
COORD Pos = {x - 1, y - 1};
SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);
}

화면 지우기(3)
#include <stdio.h>
#include <stdlib.h>
int main(void)
{
char ch;
printf("문자를 입력하고 Enter>");
scanf("%c", &ch);
system("cls");
printf("입력된 문자 %c\n", ch);
return 0;
}

버퍼 지우기(4)
#include<stdio.h>

int main(){
 char string[20];
 char c;
 
 scanf("%s",string)	;
 scanf("%c",&c);
 
 printf("%s\n", string);
 printf("!!%c!!\n",c);
 
 return 0;
}

(5)
int main(){
	char string[20]="abcd";
	int i;
	
	printf("%d",sizeof(string));
	i=printf("%s\n",string);
	printf("%d\n",i);
	
	return 0;
}

화면 지우기(6)
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
int main(void)
{
int i, j;
for(j=1;j<=9;j++)
{
system("cls");
for(i=1;i<=9;i++)
printf("%d*%d=%d\n", j, i, j*i);
printf("아무키나 누르시오.\n");
getch();
}
return 0;
}

코드 확인(7)
#include <stdio.h>
#include <conio.h>
int main(void)
{
int chr;
do
{
chr=getch();
if (chr==0 || chr == 0xe0)
{
chr=getch();
printf("확장키 code=%d\n", chr);
}
else
printf("아스키 code=%d\n", chr);
}while(1);
return 0;
}

문자 움직이기(8)
#include <stdio.h>
#include <conio.h>
#include <windows.h>
#define X_MAX 79 //가로(열)방향의 최대값
#define Y_MAX 24 //세로(행)방향의 최대값
void move_arrow_key(char chr, int *x, int *y, int x_b, int y_b);
void gotoxy(int x, int y);
int main(void)
{
char key;
int x=10, y=5;
do
{
gotoxy(x, y);
printf("A");
key=getch();
move_arrow_key(key, &x, &y, X_MAX, Y_MAX);
}while(key!=27);
return 0;
}
void move_arrow_key(char key, int *x1, int *y1, int x_b, int y_b)
{
switch(key)
{
case 72: //위쪽(상) 방향의 화살표 키 입력
*y1=*y1-1;
if (*y1<1) *y1=1; //y좌표의 최소값
break;
case 75: //왼쪽(좌) 방향의 화살표 키 입력
*x1=*x1-1;
if (*x1<1) *x1=1; //x좌표의 최소값
break;
case 77: //오른쪽(우) 방향의 화살표 키 입력
*x1=*x1+1;
if (*x1>x_b) *x1=x_b; //x좌표의 최대값
break;
case 80: //아래쪽(하) 방향의 화살표 키 입력
*y1=*y1+1;
if (*y1>y_b) *y1=y_b; //y좌표의 최대값
break;
default:
return;
}
}
void gotoxy(int x, int y)
{
COORD Pos = {x - 1, y - 1};
SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);
}
사각형 그리기(9)
#include <stdio.h>
void draw_square(int size);
int main(void)
{
int n;
printf("정사각형 그리기\n\n");
printf("정사각형의 길이(최대 37)를\n");
printf("입력하고 Enter>");
scanf("%d", &n);
draw_square(n);
return 0;
}
void draw_square(int size)
{
int i, j;
unsigned char a=0xa6;
unsigned char b[7]; 
for(i=1;i<7;i++)
b[i]=0xa0+i;
printf("%c%c",a, b[3]);
for(i=0;i<size;i++)
printf("%c%c", a, b[1]);
printf("%c%c", a, b[4]);
printf("\n");
for(i=0;i<size;i++)
{
printf("%c%c", a, b[2]);
for(j=0;j<size;j++)
printf(" ");
printf("%c%c",a, b[2]);
printf("\n");
}
printf("%c%c", a, b[6]);
for(i=0;i<size;i++)
printf("%c%c", a, b[1]);
printf("%c%c", a, b[5]);
printf("\n");
}

맛있는 거 옆에(10)
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>

int menu_display(void);
void porkcutlet(void);
void pasta(void);
void press_any_key(void);

int main(void)
{
int c;
while((c=menu_display()) != 3)
{
switch(c)
{
case 1 : porkcutlet();
break;
case 2 : pasta();
break;
default : break;
}
}
return 0;
}
int menu_display(void)
{
int select;
system("cls");
printf("간식 만들기\n\n");
printf("1. 돈카츠 \n");
printf("2. 파스타\n");
printf("3. 프로그램 종료\n\n");
printf("메뉴번호 입력>");
select=getch()-48;
return select;
}
void porkcutlet(void)
{
system("cls");
printf("돈카츠 만드는 방법\n");
printf("중략\n");
press_any_key();
}
void pasta(void)
{
system("cls");
printf("파스타 만드는 방법\n");
printf("중략\n");
press_any_key();
}
void press_any_key(void)
{
printf("\n\n");
printf("아무키나 누르면 메인 메뉴로...");
getch();
}

난수 생성(1)(11)
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
int main(void)
{
int i;
srand(time(NULL));
for(i=1;i<=10;i++)
printf("%2d:%d\n",i, rand()%6+1);
return 0;
} 
